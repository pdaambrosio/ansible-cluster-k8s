---
# Create security group for SSH access
- name: create_sg
  local_action:
    module: ec2_group
    name: "{{ sec_group_name }}"
    description: sg staging
    profile: "{{ profile }}"
    region: "{{ region }}"
    rules:
    - proto: tcp
      from_port: 22
      to_port: 22
      cidr_ip: YOURIPADDRESS/32
      rule_desc: SSH
    rules_egress:
    - proto: all
      cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: create_instances
  local_action:
    module: ec2
    group:
      - "{{ sec_group_name  }}"
    instance_type: "{{ instance_type }}"
    image: "{{ image  }}"
    profile: "{{ profile  }}"
    wait: true
    region: "{{ region }}"
    keypair: "{{ keypar }}"
    count: "{{ count }}"
  register: ec2

- name: add_instances_to_temp
  add_host: 
    name: "{{ item.public_ip }}"
    group: giropops-new
  with_items: "{{ ec2.instances }}"

- name: add_public_ip_to_hosts
  local_action:
    module: lineinfile
      dest="./hosts"
      regexp={{ item.public_ip }}
      insertafter="[kubernetes]" line={{ item.public_ip }}
  with_items: "{{ ec2.instances }}"

- name: add_private_ip_to_hosts
  local_action: 
    module: lineinfile
      dest="./hosts"
      regexp={{ item.private_ip }}
      insertafter="[kubernetes]" line={{ item.private_ip }}
  with_items: "{{ ec2.instances }}"

- name: wait SSH 
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
    delay: 10
    timeout: 320
    state: started
  with_items: "{{ ec2.instances }}"

- name: add_tag_instances
  local_action: 
    module: ec2_tag
      resource={{ item.id }}
      region={{ region }}
      profile={{ profile }}
      state=present
  with_items: "{{ ec2.instances }}"
  args:
    tags:
      Name: k8s-{{ item.ami_launch_index|int + 1 }}
